/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

define(["underscore","portal/rave_backbone","portal/rave_portal","rave"],function(e,t,n,r){var i=t.Model.extend({}),s=t.Collection.extend({model:i,pageSize:10,paginationData:{start:0,finish:0,total:0,prevLink:{},nextLink:{},pages:[]},initialize:function(){e.bindAll(this,"parse")},filter:function(e){this.searchTerm=e,this.searchTerm?r.api.rpc.searchUsers({searchTerm:this.searchTerm,offset:0,successCallback:this.parse,alertEmptySearch:function(){alert(n.getClientMessage("api.rpc.empty.search.term"))}}):r.api.rpc.getUsers({offset:0,successCallback:this.parse})},fetchPage:function(e){var t=this,i=e?e-1:0;i*=this.pageSize,this.searchTerm?r.api.rpc.searchUsers({searchTerm:this.searchTerm,offset:i,successCallback:this.parse,alertEmptySearch:function(){alert(n.getClientMessage("api.rpc.empty.search.term"))}}):r.api.rpc.getUsers({offset:i,successCallback:this.parse})},parse:function(t){var n=t.result;this.pageSize=n.pageSize||10,this.paginationData={start:n.offset+1,finish:n.resultSet.length+n.offset,total:n.totalResults,pageSize:n.pageSize,prevLink:{show:n.currentPage>1?!0:!1,pageNumber:n.currentPage-1},nextLink:{show:n.currentPage<n.numberOfPages?!0:!1,pageNumber:n.currentPage+1},pages:e.map(e.range(1,n.numberOfPages+1),function(e){return{pageNumber:e,current:e==n.currentPage}})},this.reset(n.resultSet)},toViewModel:function(){return{searchTerm:this.searchTerm,pagination:this.paginationData,users:this.constructor.__super__.toViewModel.apply(this)}}}),o=t.Model.extend({defaults:{members:{}},addInitData:function(e,t){var n=this.get("members");n[e]={userId:e,editor:t},this.set("members",n,{silent:!0})},isUserOwner:function(e){return e==this.get("ownerId")},isUserView:function(e){return e==this.get("viewerId")},isUserMember:function(e){return this.get("members")[e]?!0:!1},isUserEditor:function(e){var t=this.get("members")[e];return t&&t.editor},addMember:function(e){var t=this;r.api.rpc.addMemberToPage({pageId:t.get("id"),userId:e,successCallback:function(n){var r=t.get("members");r[e]={userId:e,editor:!1},t.set("members",r),t.trigger("share","member:add",e)}})},removeMember:function(e){var t=this;r.api.rpc.removeMemberFromPage({pageId:t.get("id"),userId:e,successCallback:function(n){var r=t.get("members");delete r[e],t.set("members",r),t.trigger("share","member:remove",e)}})},removeForSelf:function(){var e=this;r.api.rpc.removeMemberFromPage({pageId:e.get("id"),userId:e.get("viewerId"),successCallback:function(){e.trigger("declineShare",e.get("id"))}})},addEditor:function(e){var t=this;r.api.rpc.updatePageEditingStatus({pageId:t.get("id"),userId:e,isEditor:!0,successCallback:function(){var n=t.get("members");n[e]={userId:e,editor:!0},t.set("members",n),t.trigger("share","editor:add",e)}})},removeEditor:function(e){var t=this;r.api.rpc.updatePageEditingStatus({pageId:t.get("id"),userId:e,isEditor:!1,successCallback:function(){var n=t.get("members");n[e]={userId:e,editor:!1},t.set("members",n),t.trigger("share","editor:remove",e)}})},cloneForUser:function(e,t){t=t||null;var n=this;r.api.rpc.clonePageForUser({pageId:this.get("id"),userId:e,pageName:t,successCallback:function(t){if(t.error)return n.trigger("error",t.errorCode,e);n.trigger("share","clone",e)}})},acceptShare:function(){var e=this;r.api.rpc.updateSharedPageStatus({pageId:this.get("id"),shareStatus:"accepted",successCallback:function(t){e.trigger("acceptShare",e.get("id"))}})},declineShare:function(){var e=this;r.api.rpc.updateSharedPageStatus({pageId:this.get("id"),shareStatus:"refused",successCallback:function(t){r.api.rpc.removeMemberFromPage({pageId:e.get("id"),userId:e.get("viewerId"),successCallback:function(t){e.trigger("declineShare",e.get("id"))}})}})}});return{currentPage:new o,users:new s}});